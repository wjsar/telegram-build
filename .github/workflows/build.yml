name: Build Telegram Desktop

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo ./setup/system/install_dependencies.sh

    - name: Setup ThirdParty libraries
      run: ./setup/setup_third_party.sh

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: cmake --build build --config Release --parallel $(nproc)

    - name: Upload Linux artifact
      uses: actions/upload-artifact@v3
      with:
        name: Telegram-Linux
        path: build/out/Release/Telegram

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install Visual Studio 2022
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install build tools
      shell: powershell
      run: |
        choco install -y cmake ninja python3

    - name: Setup ThirdParty libraries
      shell: cmd
      run: setup\setup_third_party.cmd

    - name: Configure CMake
      run: cmake -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: cmake --build build --config Release --parallel 4

    - name: Upload Windows artifact
      uses: actions/upload-artifact@v3
      with:
        name: Telegram-Windows
        path: build\out\Release\Telegram.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dependencies
      run: |
        brew install cmake ninja python3

    - name: Setup ThirdParty libraries
      run: ./setup/setup_third_party.sh

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=Release

    - name: Build project
      run: cmake --build build --config Release --parallel $(sysctl -n hw.ncpu)

    - name: Upload macOS artifact
      uses: actions/upload-artifact@v3
      with:
        name: Telegram-macOS
        path: build/out/Release/Telegram.app
